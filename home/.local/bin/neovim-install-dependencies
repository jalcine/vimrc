#!/usr/bin/env bash
# vim: set fdm=marker :
# TODO: Import shared framework for my shell scripts from `dotfiles`.
# TODO: Add more option control to this.
# TODO: Merge update + install scripts.

function run_install ()
{
  cd "${HOME}/.config/nvim" || exit
  mkdir -p "${HOME}/.config/nvim/logs" || exit
  mkdir -p "${HOME}/.config/nvim/tags" || exit

  install_javascript
  install_perl
  install_ruby
  install_python
}

function install_python ()
{
  pyenv virtualenv 2.7.14 neovim-py2 -vf
  pyenv virtualenv 3.6.4  neovim-py3 -vf

  pyenv exec pip2 install pipenv
  pyenv exec pip3 install pipenv

  pyenv exec python2 pipenv install --system
  pyenv exec python3 pipenv install --system
}

function install_ruby ()
{
  rbenv exec bundle install --verbose
}

function install_javascript ()
{
  ndenv exec yarn --verbose
}

function install_perl ()
{
  plenv exec carton install
}

__ScriptVersion="2017-12-24"

#===  FUNCTION  ================================================================
#         NAME:  usage
#  DESCRIPTION:  Display usage information.
#===============================================================================
function usage ()
{
  echo "Usage :  $0 [options] [--]

    Options:
    -i|install    Installs dependencies
    -h|help       Display this message
    -v|version    Display script version"

}    # ----------  end of function usage  ----------

#-----------------------------------------------------------------------
#  Handle command line arguments
#-----------------------------------------------------------------------

while getopts ":hvi" opt
do
  case $opt in

  h|help     )  usage; exit 0   ;;

  v|version  )  echo "$0 -- Version $__ScriptVersion"; exit 0   ;;

  i|install  )  run_install; exit 0   ;;

  * )  echo -e "\n  Option does not exist : $OPTARG\n"
      usage; exit 1   ;;

  esac    # --- end of case ---
done
shift $(($OPTIND-1))
